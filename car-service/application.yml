spring:
  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVER}
    consumer:
      bootstrap-servers: ${BOOTSTRAP_SERVER}
      group-id: ${KAFKA_GROUP_ID}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    producer:
      bootstrap-servers: ${BOOTSTRAP_SERVER}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database: postgresql
    generate-ddl: true

  elasticsearch:
    uris: ${ELASTICSEARCH_URIS}

server:
  port: 9005

management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

eureka:
  client:
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${SERVICE_URL_DEFAULT_ZONE}
  instance:
    preferIpAddress: true

minio:
  url: http://localhost:9000
  username: minio
  password: minio123
